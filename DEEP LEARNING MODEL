import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
np.random.seed(0)
X = np.random.randn(1000, 10)  
y = np.random.randint(2, size=1000)  
X_train, X_test = X[:800], X[800:]
y_train, y_test = y[:800], y[800:]
input_dim = X_train.shape[1]  
hidden_layers = 2
neurons_per_layer = 64
activation_function = 'relu'
output_dim = 1  
model = Sequential()
model.add(Dense(neurons_per_layer, input_dim=input_dim, activation=activation_function))
for _ in range(hidden_layers - 1):
    model.add(Dense(neurons_per_layer, activation=activation_function))
model.add(Dense(output_dim, activation='sigmoid'))  
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
epochs = 3
batch_size = 32
model.fit(X_train, y_train, epochs=epochs, batch_size=batch_size, verbose=1)
loss, accuracy = model.evaluate(X_test, y_test)
print("Test Loss:", loss)
print("Test Accuracy:", accuracy)
